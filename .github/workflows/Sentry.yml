name: "Sentry Upload SourceMaps"

on: push

jobs:
  app1:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - run: npm install -g yarn
      - uses: actions/cache@v3
        id: node_modules_cache_id_app1
        env:
          cache-name: cache-node-modules-app1
        with:
          path: 'app1/node_modules'
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('app1/yarn.lock') }}
      - run: echo '${{ toJSON(steps.node_modules_cache_id_app1.outputs) }}'
      - if: ${{ steps.node_modules_cache_id_app1.outputs.cache-hit != 'true' }}
        run: yarn install
        working-directory: app1
      - run: yarn build
        working-directory: app1
      - uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist

  app2:
    runs-on: ubuntu-latest

    needs: app1

    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: dist
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - run: npm install -g yarn
      - uses: actions/cache@v3
        id: node_modules_cache_id_app2
        env:
          cache-name: cache-node-modules-app2
        with:
          path: 'app2/node_modules'
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('app2/yarn.lock') }}
      - run: echo '${{ toJSON(steps.node_modules_cache_id_app2.outputs) }}'
      - if: ${{ steps.node_modules_cache_id_app2.outputs.cache-hit != 'true' }}
        run: yarn install
        working-directory: app2
      - run: yarn build
        working-directory: app2
      - uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist

  app3:
    runs-on: ubuntu-latest

    needs: app2

    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: dist
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - run: npm install -g yarn
      - uses: actions/cache@v3
        id: node_modules_cache_id_app3
        env:
          cache-name: cache-node-modules-app3
        with:
          path: 'app3/node_modules'
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('app3/yarn.lock') }}
      - run: echo '${{ toJSON(steps.node_modules_cache_id_app3.outputs) }}'
      - if: ${{ steps.node_modules_cache_id_app3.outputs.cache-hit != 'true' }}
        run: yarn install
        working-directory: app3
      - run: yarn build
        working-directory: app3
      - uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist

  sentry:
    runs-on: ubuntu-latest

    needs: app3

    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          path: assets
      - name: Set outputs
        id: vars
        run: |
          echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          echo "commit_date=$(git show -s --date=format:"%y%m%d" --format=%cd)" >> $GITHUB_OUTPUT
        env:
          TZ: "Asia/Tokyo"
      - name: Create Sentry release
        uses: getsentry/action-release@v1
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
        with:
          environment: production
          sourcemaps: assets
          set_commits: skip
          version_prefix: v
          version: ${{ steps.vars.outputs.commit_date }}_${{ steps.vars.outputs.sha_short }}
